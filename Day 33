class Solution {
    public static int aggressiveCows(int[] stalls, int k) {
        Arrays.sort(stalls);  

        int low = 1;  
        int high = stalls[stalls.length - 1] - stalls[0];  // Maximum possible distance
        int result = 0;

        while (low <= high) {
            int mid = low + (high - low) / 2;

            if (isPossible(stalls, k, mid)) {
                result = mid;  
                low = mid + 1;
            } else {
                high = mid - 1;  
            }
        }

        return result;
    }

    private static boolean isPossible(int[] stalls, int k, int dist) {
        int count = 1;
        int lastPosition = stalls[0];

        for (int i = 1; i < stalls.length; i++) {
            if (stalls[i] - lastPosition >= dist) {
                count++;
                lastPosition = stalls[i];
            }

            if (count == k) {
                return true;
            }
        }

        return false;
    }
}
